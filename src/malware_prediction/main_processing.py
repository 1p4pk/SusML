import os
import socket
import sys
import time

from preprocessor import Preprocessor

SIZE = int(os.environ['OMPI_COMM_WORLD_SIZE'])
RANK = int(os.environ['OMPI_COMM_WORLD_RANK'])
HOSTNAME = socket.gethostname()

MESSAGE = """
            --- {hostname} ---
                             
                {row_num}     
                             
            --- {run_time} S ---"""

TEST_CSV_PATH = "./data/test/test.csv"
TRAIN_CSV_PATH = "./data/train/train.csv"

# TRAIN_ENCODED_CSV_PATH = f"./data/train/train_encoded.csv"
# TEST_ENCODED_CSV_PATH = f"./data/test/test_encoded.csv"

TRAIN_ENCODED_CSV_PATH = f"./data/train/train_encoded_{RANK}.csv"
TEST_ENCODED_CSV_PATH = f"./data/test/test_encoded_{RANK}.csv"

preprocessor = Preprocessor()


def run(row_num):
    print(f"Running train preprocessing with rank {RANK} of {SIZE} on {HOSTNAME}")
    df = preprocessor.import_data(TRAIN_CSV_PATH, row_num, offset=row_num * RANK + 1)
    preprocessor.encode_data(df)
    df.to_csv(TRAIN_ENCODED_CSV_PATH, index=False)


def benchmark(fn=run):
    row_num_train = int(sys.argv[1])
    start_time = time.time()
    fn(row_num_train)
    run_time = round(time.time() - start_time, 2)
    with open(f"./data/benchmark/run_time_preprocessing_{row_num_train}.csv", "a") as eval_file:
        eval_file.writelines(f"{HOSTNAME},{row_num_train},{run_time}\n")
    print(MESSAGE.format(hostname=HOSTNAME, row_num=row_num_train, run_time=run_time))


def run_test_encoding():
    print(f"Running test preprocessing with rank {RANK} of {SIZE} on {HOSTNAME}")
    row_num_test = int(sys.argv[2])
    df = preprocessor.import_data(TEST_CSV_PATH, row_num_test, offset=row_num_test * RANK + 1, is_train=False)
    preprocessor.encode_data(df, is_train=False)
    df.to_csv(TEST_ENCODED_CSV_PATH, index=False)


if __name__ == '__main__':
    benchmark()
    run_test_encoding()
