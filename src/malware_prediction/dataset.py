from torch.utils import data
import pandas as pd
import torch
from sklearn.model_selection import train_test_split


class MalwareDataset(data.Dataset):
    def __init__(self, X, y):
        self.X = X
        self.y = y

    def __len__(self):
        return len(self.X)

    def __getitem__(self, index):
        return self.X[index], self.y[index]

    @classmethod
    def load(cls, csv_path):
        df = pd.read_csv(csv_path)
        X_train, X_test, y_train, y_test = cls.run_preparation(df)
        return cls(X=X_train, y=y_train)

    @classmethod
    def run_preparation(cls, df, test_size=0.2):
        X = df.drop('HasDetections', axis=1).drop('MachineIdentifier', axis=1).values
        y = df['HasDetections'].values

        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)

        X_train = torch.FloatTensor(X_train)
        X_test = torch.FloatTensor(X_test)
        y_train = torch.FloatTensor(y_train)
        y_test = torch.FloatTensor(y_test)
        return X_train, X_test, y_train, y_test
