import pandas as pd
import torch
from torch.utils import data


class MalwareDataset(data.Dataset):
    def __init__(self, X, y, cols, rows):
        self.X = X
        self.y = y
        self.cols = cols
        self.rows = rows

    def __len__(self):
        return len(self.X)

    def __getitem__(self, index):
        return self.X[index], self.y[index]

    @classmethod
    def load(cls, csv_path_train, is_train=True):
        df = pd.read_csv(csv_path_train, error_bad_lines=False)
        X, y_train = cls.preparation(df, is_train)
        return cls(X=X, y=y_train, cols=df.columns, rows=len(df.index))

    @classmethod
    def preparation(cls, df, is_train=True):
        if is_train:
            X = df.drop('HasDetections', axis=1).drop('MachineIdentifier', axis=1).values
            y = df['HasDetections'].values

            X_train = torch.FloatTensor(X)
            y_train = torch.FloatTensor(y)

            return X_train, y_train
        else:
            X = df.drop('MachineIdentifier', axis=1).values
            id = df['MachineIdentifier'].values
            X_test = torch.FloatTensor(X)
            return X_test, id
